<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>3-week</title>
    <link href="/2022/08/10/3-week/"/>
    <url>/2022/08/10/3-week/</url>
    
    <content type="html"><![CDATA[<h1 id="linux题"><a href="#linux题" class="headerlink" title="linux题"></a>linux题</h1><h3 id="1-yum私有仓库的实现及博客输出"><a href="#1-yum私有仓库的实现及博客输出" class="headerlink" title="1. yum私有仓库的实现及博客输出"></a>1. yum私有仓库的实现及博客输出</h3><h3 id="2-画图-TCP协议和三次握手及四次挥手，可以参考别人的，但是需要自己画一次"><a href="#2-画图-TCP协议和三次握手及四次挥手，可以参考别人的，但是需要自己画一次" class="headerlink" title="2. 画图 TCP协议和三次握手及四次挥手，可以参考别人的，但是需要自己画一次"></a>2. 画图 TCP协议和三次握手及四次挥手，可以参考别人的，但是需要自己画一次</h3><h3 id="3-静态配置网卡IP，centos-ubuntu实现"><a href="#3-静态配置网卡IP，centos-ubuntu实现" class="headerlink" title="3. 静态配置网卡IP，centos/ubuntu实现"></a>3. 静态配置网卡IP，centos/ubuntu实现</h3><h1 id="脚本题"><a href="#脚本题" class="headerlink" title="脚本题"></a>脚本题</h1><h3 id="4-实现免密登陆脚本-expect登陆远程主机，将生成的密钥写入到目标主机-expect测试远程登陆。"><a href="#4-实现免密登陆脚本-expect登陆远程主机，将生成的密钥写入到目标主机-expect测试远程登陆。" class="headerlink" title="4. 实现免密登陆脚本, expect登陆远程主机，将生成的密钥写入到目标主机, expect测试远程登陆。"></a>4. 实现免密登陆脚本, expect登陆远程主机，将生成的密钥写入到目标主机, expect测试远程登陆。</h3><h4 id="1）通过shift读取脚本参数"><a href="#1）通过shift读取脚本参数" class="headerlink" title="1）通过shift读取脚本参数"></a>1）通过shift读取脚本参数</h4><h4 id="2）通过select来选择功能-例如功能有"><a href="#2）通过select来选择功能-例如功能有" class="headerlink" title="2）通过select来选择功能.例如功能有"></a>2）通过select来选择功能.例如功能有</h4><h5 id="安装mysql"><a href="#安装mysql" class="headerlink" title="- 安装mysql"></a>- 安装mysql</h5><h5 id="安装apache"><a href="#安装apache" class="headerlink" title="- 安装apache"></a>- 安装apache</h5><h5 id="免密钥登陆主机"><a href="#免密钥登陆主机" class="headerlink" title="- 免密钥登陆主机"></a>- 免密钥登陆主机</h5><p>当前我们只实现免密钥登陆主机</p><h4 id="3）通过函数封装每个功能"><a href="#3）通过函数封装每个功能" class="headerlink" title="3）通过函数封装每个功能"></a>3）通过函数封装每个功能</h4><h4 id="4）将免密钥登陆的过程可以重复进行-while-循环实现重复，需要有退出过程。当用户输入exit时，退出免密钥功能。"><a href="#4）将免密钥登陆的过程可以重复进行-while-循环实现重复，需要有退出过程。当用户输入exit时，退出免密钥功能。" class="headerlink" title="4）将免密钥登陆的过程可以重复进行, while 循环实现重复，需要有退出过程。当用户输入exit时，退出免密钥功能。"></a>4）将免密钥登陆的过程可以重复进行, while 循环实现重复，需要有退出过程。当用户输入exit时，退出免密钥功能。</h4><h4 id="5）支持输入一批主机免密钥，使用数组-实现"><a href="#5）支持输入一批主机免密钥，使用数组-实现" class="headerlink" title="5）支持输入一批主机免密钥，使用数组 实现"></a>5）支持输入一批主机免密钥，使用数组 实现</h4><h2 id="完整脚本"><a href="#完整脚本" class="headerlink" title="完整脚本"></a>完整脚本</h2><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>weekly journal</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2-week</title>
    <link href="/2022/08/02/2-week/"/>
    <url>/2022/08/02/2-week/</url>
    
    <content type="html"><![CDATA[<h1 id="完成一个shell脚本，脚本的作用。"><a href="#完成一个shell脚本，脚本的作用。" class="headerlink" title="完成一个shell脚本，脚本的作用。"></a>完成一个shell脚本，脚本的作用。</h1><h3 id="1-运行脚本可以显示出本机的ip地址"><a href="#1-运行脚本可以显示出本机的ip地址" class="headerlink" title="1. 运行脚本可以显示出本机的ip地址"></a>1. 运行脚本可以显示出本机的ip地址</h3><p><img src="1-1-2022-8-2-1659.png" alt="1-1-2022-8-2"><br><img src="1-2-2022-8-2-1722.png" alt="1-2-2022-8-2"></p><h3 id="2-如果ip地址中有3这个数字，那么就打印出当前的系统时间"><a href="#2-如果ip地址中有3这个数字，那么就打印出当前的系统时间" class="headerlink" title="2. 如果ip地址中有3这个数字，那么就打印出当前的系统时间"></a>2. 如果ip地址中有3这个数字，那么就打印出当前的系统时间</h3><p><img src="2-1-2022-8-2-1700.png" alt="2-1-2022-8-2"></p><h3 id="3-如果ip地址中不含3这个数字，就批量建立用户magedu-00-magedu-01-…-magedu-100并且所有用户同属于magedu组"><a href="#3-如果ip地址中不含3这个数字，就批量建立用户magedu-00-magedu-01-…-magedu-100并且所有用户同属于magedu组" class="headerlink" title="3. 如果ip地址中不含3这个数字，就批量建立用户magedu_00, magedu_01, … magedu_100并且所有用户同属于magedu组"></a>3. 如果ip地址中不含3这个数字，就批量建立用户magedu_00, magedu_01, … magedu_100并且所有用户同属于magedu组</h3><p><img src="2-1-2022-8-2-1700.png" alt="3-1-2022-8-2"><br><img src="3-2-2022-8-2-1755.png" alt="3-2-2022-8-2"></p><h3 id="4-打印出-etc-passwd这个文件中可以登陆的用户（非-usr-sbin-nologin）"><a href="#4-打印出-etc-passwd这个文件中可以登陆的用户（非-usr-sbin-nologin）" class="headerlink" title="4. 打印出/etc/passwd这个文件中可以登陆的用户（非/usr/sbin/nologin）"></a>4. 打印出/etc/passwd这个文件中可以登陆的用户（非/usr/sbin/nologin）</h3><p><img src="4-1-2022-8-2-1701.png" alt="4-1-2022-8-2"><br><img src="4-2-2022-8-2-1725.png" alt="4-2-2022-8-2"></p><h3 id="5-yum安装nginx服务，并且启动该服务"><a href="#5-yum安装nginx服务，并且启动该服务" class="headerlink" title="5. yum安装nginx服务，并且启动该服务"></a>5. yum安装nginx服务，并且启动该服务</h3><p><img src="5-1-2022-8-2-1702.png" alt="5-1-2022-8-2"><br><img src="5-2-2022-8-2-1727.png" alt="5-2-2022-8-2"></p><h3 id="完整脚本"><a href="#完整脚本" class="headerlink" title="完整脚本"></a>完整脚本</h3><div class="code-wrapper"><pre><code class="hljs">#!/bin/bash# heitian# 2022-8-2#1localIP=`hostname -I | awk &#39;&#123;print $1&#125;&#39;`echo $&#123;localIP&#125;#2、3if [[ -z `echo $&#123;localIP&#125; | grep &quot;3&quot;` ]]then    `groupadd magedu`    i=0    for i in &#123;0..3&#125;  do    `useradd -g magedu magedu_$&#123;i&#125;`  doneelse     echo `date`fi#4grep -v &quot;/sbin/nologin&quot; /etc/passwd#5if [[ -n `rpm -qa nginx wget` ]]then     yum -y remove nginx wgetfi    yum -y install wget    wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo    yum clean all &amp;&amp; yum repolist    yum -y install nginx    systemctl start nginx    systemctl status nginx</code></pre></div><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>weekly journal</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>1-week</title>
    <link href="/2022/07/26/1-week/"/>
    <url>/2022/07/26/1-week/</url>
    
    <content type="html"><![CDATA[<h1 id="1-图文并茂解释开源许可证-GPL、BSD、MIT、Mozilla、Apache和LGPL的区别？"><a href="#1-图文并茂解释开源许可证-GPL、BSD、MIT、Mozilla、Apache和LGPL的区别？" class="headerlink" title="1. 图文并茂解释开源许可证 GPL、BSD、MIT、Mozilla、Apache和LGPL的区别？"></a>1. 图文并茂解释开源许可证 GPL、BSD、MIT、Mozilla、Apache和LGPL的区别？</h1><h1 id="2-安装各发行版系统的安装-centos-rockylinux-ubuntu-等"><a href="#2-安装各发行版系统的安装-centos-rockylinux-ubuntu-等" class="headerlink" title="2. 安装各发行版系统的安装(centos, rockylinux, ubuntu, 等)"></a>2. 安装各发行版系统的安装(centos, rockylinux, ubuntu, 等)</h1><h2 id="1）CentOS"><a href="#1）CentOS" class="headerlink" title="1）CentOS"></a>1）CentOS</h2><h2 id="2）Ubuntu"><a href="#2）Ubuntu" class="headerlink" title="2）Ubuntu"></a>2）Ubuntu</h2><h1 id="3-Linux中总结"><a href="#3-Linux中总结" class="headerlink" title="3. Linux中总结"></a>3. Linux中总结</h1><h3 id="1）如何通过一个简短的关键字，例如process-获取相关的命令。"><a href="#1）如何通过一个简短的关键字，例如process-获取相关的命令。" class="headerlink" title="1）如何通过一个简短的关键字，例如process 获取相关的命令。"></a>1）如何通过一个简短的关键字，例如process 获取相关的命令。</h3><h3 id="2）通过命令的描述，选择一个命令，获取命令的man文档。"><a href="#2）通过命令的描述，选择一个命令，获取命令的man文档。" class="headerlink" title="2）通过命令的描述，选择一个命令，获取命令的man文档。"></a>2）通过命令的描述，选择一个命令，获取命令的man文档。</h3><h3 id="3）解读man文档，man分几个部分？man每个部分的解释，特别是语法部分。-lt-gt-…等各代表什么含义。"><a href="#3）解读man文档，man分几个部分？man每个部分的解释，特别是语法部分。-lt-gt-…等各代表什么含义。" class="headerlink" title="3）解读man文档，man分几个部分？man每个部分的解释，特别是语法部分。&lt;&gt;, [] …等各代表什么含义。"></a>3）解读man文档，man分几个部分？man每个部分的解释，特别是语法部分。&lt;&gt;, [] …等各代表什么含义。</h3><h3 id="4）根据语法部分-简要的写几个操作。"><a href="#4）根据语法部分-简要的写几个操作。" class="headerlink" title="4）根据语法部分 简要的写几个操作。"></a>4）根据语法部分 简要的写几个操作。</h3><h1 id="4-切换到-etc-目录，列出fstab文件的详细信息，详细解决fstab一行，每个或每几个字符的详细含义。"><a href="#4-切换到-etc-目录，列出fstab文件的详细信息，详细解决fstab一行，每个或每几个字符的详细含义。" class="headerlink" title="4. 切换到/etc/目录，列出fstab文件的详细信息，详细解决fstab一行，每个或每几个字符的详细含义。"></a>4. 切换到/etc/目录，列出fstab文件的详细信息，详细解决fstab一行，每个或每几个字符的详细含义。</h1><p>   <img src="4-1-2022-07-26.png" alt="4-1-202207261602"></p><h3 id="一、文件介绍"><a href="#一、文件介绍" class="headerlink" title="一、文件介绍"></a>一、文件介绍</h3><div class="code-wrapper"><pre><code class="hljs">  /etc/fstab：自动挂载，系统开机时会主动读取这个文件内容，并按照配置挂载磁盘。</code></pre></div><h3 id="二、文件解析"><a href="#二、文件解析" class="headerlink" title="二、文件解析"></a>二、文件解析</h3><div class="code-wrapper"><pre><code class="hljs">从图中可以看出配置一共六列，这六列的含义分别是:      第一列：磁盘设备文件或者设备的Label或者UUID。     Label和UUID可通过dumpe2fs -h /dev/sda1命令查看/dev/sda1的信息；     其中&quot;Filesystem volume name:&quot;是Label; &quot;Filesystem UUID:&quot;是UUID;      第二列：磁盘挂载目录，挂载点。     /、/usr、/swap是安装系统是分区的默认挂载点；     swap为交换分区不设置挂载点默认为none或swap；     挂载目录必须存在；     第三列：磁盘文件系统的格式。     磁盘文件系统的格式，包括ext3、ext4、nfs、swap、xfs等；     其中swap是交换分区；      第四列：挂载目录的参数。     Async/sync：设置是否为同步方式运行，默认为async；     auto/noauto：当下载mount -a 的命令时，此文件系统是否被主动挂载。默认为auto；     rw/ro：是否以以只读或者读写模式挂载；     exec/noexec：限制此文件系统内是否能够进行&quot;执行&quot;的操作；     user/nouser：是否允许用户使用mount命令挂载；     suid/nosuid：是否允许SUID的存在；     Usrquota：启动文件系统支持磁盘配额模式；     Grpquota：启动文件系统对群组磁盘配额模式的支持；     Defaults：同时具有rw,suid,dev,exec,auto,nouser,async等默认参数的设置；     第五列：能否被dump备份程序备份。     0：不被dump备份；     1：使用dump的备份，并显示上一次备份至今的天数；     2：不定日期的进行dump备份；     第六列：是否检验扇区，fask检验系统是否完整。     0：不检验扇区；     1：优先检验（根据目录设置）；     2：1级别检验完之后经行检验；     /目录永远是1，不能同时设置两个1。数字相同时同时检验；        解释第一行：     将&quot;/dev/mapper/centos-root&quot;磁盘文件系统挂载到&quot;/&quot;目录下；磁盘文件系统的格式是&quot;xfs&quot;；     参数为&quot;defaults&quot;拥有所有参数的默认设置，不被dump程序备份，不被fask检验文件系统完整性。        </code></pre></div><h1 id="5-简要说明FHS结构。"><a href="#5-简要说明FHS结构。" class="headerlink" title="5. 简要说明FHS结构。"></a>5. 简要说明FHS结构。</h1><h3 id="文件系统FHS简介"><a href="#文件系统FHS简介" class="headerlink" title="文件系统FHS简介"></a>文件系统FHS简介</h3><p><img src="5-1-2022-07-28.png" alt="5-1-202207281417"></p><h4 id="Linux的文件系统层级结构：FileSystem-Hierarchy-Standdard-简称FHS"><a href="#Linux的文件系统层级结构：FileSystem-Hierarchy-Standdard-简称FHS" class="headerlink" title="Linux的文件系统层级结构：FileSystem Hierarchy Standdard(简称FHS)"></a>Linux的文件系统层级结构：FileSystem Hierarchy Standdard(简称FHS)</h4><div class="code-wrapper"><pre><code class="hljs"> /boot： 引导文件存放目录 /bin：所有用户使用的基本命令 /sbin：管理类的基本命令 /lib：启动时程序以来的基本共享库文件以及内核模块文件（/lib/modules） /lib64：专用x86_64系统上的辅助共享库文件存放位置 /etc：配置文件目录 /root：管理员家目录 /dev：设备文件及特殊文件存储位置   b：block device，随机访问   c：character device，线性访问 /home/USERNAME：普通用户的家目录 /media：便携式移动设备挂载点 /mnt：临时文件系统挂载点 /opt：第三方应用程序的安装位置 /proc：用于输出内核与进程信息相关的虚拟文件系统 /srv：系统上运行的服务用到的数据 /sys：用于输出当前系统上硬件设备相关信息的虚拟文件系统 /tmp：临时文件存储位置 /usr：universal shared，read-only data   bin：保证系统拥有完整功能而提供的应用程序   sbin：   lib：32位使用   lin64：只存在64位系统   include：C程序的头文件   share：结构化独立数据     local：第三方应用程序的安装位置       bin，sbin，lib，lin64，etc，share /var：variable data files   cache：应用程序缓存数据目录   lin：应用程序状态信息数据   local：专用于为/usr/local/下的应用程序存储可变数据   lock：锁文件   log：日志目录及文件   opt：专用于为/opt下的应用程序存储可变数据   run：运行中的进程相关数据，通常用于存储pid进程文件   spool：应用程序数据池   tmp：保存系统两次重启之间产生的临时数据</code></pre></div><h1 id="6-用自己的理解总结-文件管理，用户管理，组用户，权限管理相关的命令。"><a href="#6-用自己的理解总结-文件管理，用户管理，组用户，权限管理相关的命令。" class="headerlink" title="6. 用自己的理解总结 文件管理，用户管理，组用户，权限管理相关的命令。"></a>6. 用自己的理解总结 文件管理，用户管理，组用户，权限管理相关的命令。</h1><h3 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h3><h4 id="Linux下的文件类型"><a href="#Linux下的文件类型" class="headerlink" title="Linux下的文件类型"></a>Linux下的文件类型</h4><div class="code-wrapper"><pre><code class="hljs"> -：普通文件 d：目录文件directory l：符号链接文件link b：块设备block c：字符设备character p：管道文件pipe s：套接字文件socket</code></pre></div><h4 id="文件操作命令"><a href="#文件操作命令" class="headerlink" title="文件操作命令"></a>文件操作命令</h4><h5 id="显示当前工作目录"><a href="#显示当前工作目录" class="headerlink" title="显示当前工作目录"></a>显示当前工作目录</h5><div class="code-wrapper"><pre><code class="hljs">命令 &quot;pwd&quot;：printing working directory用法 pwd [OPTION]... -P 显示真实物理路径 -L 显示连接路径（默认）</code></pre></div><p>   <img src="6-1-2022-07-27.png" alt="6-1-202207271603"></p><h5 id="绝对路径和相对路径"><a href="#绝对路径和相对路径" class="headerlink" title="绝对路径和相对路径"></a>绝对路径和相对路径</h5><div class="code-wrapper"><pre><code class="hljs">绝对路径   以正斜杠&quot;/&quot;即目录开始   完整的文件的位置路径   可用于任何想指定一个文件名的时候相对路径   不以斜杠开始   一般情况下，是指相对于当前工作目录的路径；特殊情况下，是相对于某目录的位置   可以作为一个简短的形式指定一个文件名</code></pre></div><p>   <img src="6-2-2022-07-27.png" alt="6-2-202207271615"></p><h5 id="更改目录"><a href="#更改目录" class="headerlink" title="更改目录"></a>更改目录</h5><div class="code-wrapper"><pre><code class="hljs">命令 &quot;cd&quot;：change directory 改变目录用法 cd [OPTION] dir -P：切换至物理路径，而非软连接目录 可以使用绝对路径或相对路径    切换至父目录   &quot;cd ..&quot;    切换至当前用户主目录   &quot;cd&quot;    切换至以前的工作目录   &quot;cd -&quot; 相关的环境变量    &quot;pwd&quot;：当前目录路径    &quot;OLDPWD&quot;：上一次目录路径</code></pre></div><p>   <img src="6-3-2022-07-27.png" alt="6-3-202207271633"></p><h5 id="创建空文件和刷新时间"><a href="#创建空文件和刷新时间" class="headerlink" title="创建空文件和刷新时间"></a>创建空文件和刷新时间</h5><div class="code-wrapper"><pre><code class="hljs">命令 &quot;touch&quot;：可以用来创建空文件或刷新文件的时间用法 touch [OPTION]... FILE... -a：仅改变atime和ctime -m：仅改变mitme和ctime -t：[[CC]YY]MMDDhhmm[.ss] 指定atime和ctime的时间戳 -c：如果文件不存在，则不创建</code></pre></div><h5 id="复制文件和目录"><a href="#复制文件和目录" class="headerlink" title="复制文件和目录"></a>复制文件和目录</h5><div class="code-wrapper"><pre><code class="hljs">命令 &quot;cp(copy)&quot;：可以实现文件或目录的复制用法：  cp [option]... [-T] SOURCE DEST  cp [option]... SOURCE... DIRECTORY  cp [option]... -t DIRECTORY SOURCE...   -i：如果目标已存在，覆盖前提示是否覆盖   -n：不覆盖，注意两者顺序   -r，-R：递归复制   -d：不复制源文件，只复制链接名   -u：只复制源比目标更新文件或目标不存在的文件   -b：目标存在，覆盖前先备份，默认形式为filename~，只保留最近的一个备份</code></pre></div><h5 id="移动和重命名文件"><a href="#移动和重命名文件" class="headerlink" title="移动和重命名文件"></a>移动和重命名文件</h5><div class="code-wrapper"><pre><code class="hljs">命令 &quot;mv&quot;：可以实现文件或目录移动和改名  同一分区移动数据，速度很快，数据位置没有变化  不同分区移动数据，速度相对慢，数据位置发生了变化用法：  mv [OPTION]... [-T] SOURCE DEST  mv [OPTION]... SOURCE... DIRECTORY  mv [OPTION]... -t DIRECTORY source...   -i：交互式   -f：强制   -b：目标存在，覆盖前先备份</code></pre></div><h5 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h5><div class="code-wrapper"><pre><code class="hljs">命令 &quot;rm&quot;：可以删除文件和目录  此命令非常危险，谨慎使用用法：rm [OPTION]... FILE... -i：交互式 -f：强制删除 -r：递归</code></pre></div><h4 id="目录操作命令"><a href="#目录操作命令" class="headerlink" title="目录操作命令"></a>目录操作命令</h4><h5 id="列出目录内容"><a href="#列出目录内容" class="headerlink" title="列出目录内容"></a>列出目录内容</h5><div class="code-wrapper"><pre><code class="hljs">命令 &quot;ls&quot;：可以列出当前目录内容或指定目录内容用法 ls [options] [files_or_dirs] -a：包含隐藏文件 -l：显示额外信息 -R：目录递归 -ld：目录和符号链接信息 -1：文件分行显示 -S：按文件大小排序 -t：按mtime排序 -u：配合-t选项，显示并按atime从新到旧排序 -X：按文件后缀排序&quot;ls -l&quot;看到的文件大小，不一定是实际文件真正占用空间的大小</code></pre></div><h5 id="显示目录结构"><a href="#显示目录结构" class="headerlink" title="显示目录结构"></a>显示目录结构</h5><div class="code-wrapper"><pre><code class="hljs">命令 &quot;tree&quot;：以树状显示目录结构 -d：只显示目录 -L level：置顶显示的层级数目</code></pre></div><h5 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h5><div class="code-wrapper"><pre><code class="hljs">命令 &quot;mkdir&quot;：创建目录 -p：存在于不报错，自动创建所需要的各目录，递归创建 -v：显示详细信息</code></pre></div><h5 id="删除空目录"><a href="#删除空目录" class="headerlink" title="删除空目录"></a>删除空目录</h5><div class="code-wrapper"><pre><code class="hljs">命令 &quot;rmdir&quot;：删除空目录 -p：递归删除父空目录 -v：显示详细信息</code></pre></div><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4><div class="code-wrapper"><pre><code class="hljs">命令 &quot;useradd&quot;：创建新用户用法：useradd [options] login_name -u：uid -o：配合-u选项，不检查uid唯一性 -g：gid，指明用户所属基本组，可为组名，也可以gid -c：&quot;COMMENT&quot; 用户的注释信息 -d：HOME_DIR 以指定的路径（不存在）为家目录 -s：指明用户的默认shell程序，可用列表在/etc/shells文件中 -G：GROUP1[,GROUP2,...] 为用户指明附加组，组需要存在 -N：不创建私用组做主组，使用users组做主组 -r：创建系统用户 centos6之前ID&lt;500 centos7之后ID&lt;1000 -m：创建家目录，用于系统用户 -M：不创建家目录，用于非系统用户 -p：指定加密的密码</code></pre></div><h4 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h4><div class="code-wrapper"><pre><code class="hljs">命令 &quot;userdel&quot;：删除指定用户用法 userdel [options] login_name -f，--force：强制 -r，--remove：删除用户家目录和邮箱</code></pre></div><h4 id="修改用户属性"><a href="#修改用户属性" class="headerlink" title="修改用户属性"></a>修改用户属性</h4><div class="code-wrapper"><pre><code class="hljs">命令 &quot;usermod&quot;：可以修改用户属性用法 usermod [options] login_name -u：更改uid -g：更改主组 -G：新附加组，原有的会被覆盖，若要保留原有，则同时使用-a选项 -s：更改shell程序 -c：&quot;COMMENT&quot; 新的注释信息 -d：HOME 新家目录不会自动创建，若要创建新家目录并移动原有数据，同时使用-m选项 -l：login_name 新名字 -L：锁定用户，在/etc/shadow密码栏增加！ -U：解锁用户，将/etc/shadow密码栏的！去掉 -e：YYYY-MM-DD  指定用户账号过期日期 -f：设定非活动期限，即宽限期</code></pre></div><h4 id="修改用户密码"><a href="#修改用户密码" class="headerlink" title="修改用户密码"></a>修改用户密码</h4><div class="code-wrapper"><pre><code class="hljs">命令 &quot;passwd&quot;：修改用户密码用法 passwd [OPTIONS] UserName -d：删除指定用户密码 -l：锁定指定用户 -u：解锁指定用户 -e：强制用户下次登陆时修改密码 -f：强制操作 -n：mindays：指定最短使用期限 -x：maxdays：最大使用期限 -w：warndays：提前多少天开始警告 -i：inactivedays：非活动期限 --stdin：从标准输入接受用户密码，Ubuntu无此选项   </code></pre></div><p>  <img src="6-4-2022-07-28.png" alt="6-4-202207280957"></p><h3 id="组用户"><a href="#组用户" class="headerlink" title="组用户"></a>组用户</h3><h4 id="创建组"><a href="#创建组" class="headerlink" title="创建组"></a>创建组</h4><div class="code-wrapper"><pre><code class="hljs">命令 &quot;groupadd&quot;：创建组用法 groupadd [OPTION]... group_name -g：指定GID号 -r：创建系统组；Centos6之前I&lt;500;Centos7之后ID&lt;1000</code></pre></div><h4 id="删除组"><a href="#删除组" class="headerlink" title="删除组"></a>删除组</h4><div class="code-wrapper"><pre><code class="hljs">命令 &quot;groupdel&quot;：删除组用法 groupdel [optinos] group_name -f，force：强制删除，即使是用户主组也强制删除组，但会导致无主组的用户不可用无法登录</code></pre></div><h4 id="修改组属性"><a href="#修改组属性" class="headerlink" title="修改组属性"></a>修改组属性</h4><div class="code-wrapper"><pre><code class="hljs">命令 &quot;groupmod&quot;：组属性修改用法 groupmod [option]... group -n，group_name：新组名 -g，GID：修改gid号</code></pre></div><h3 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h3><h4 id="更改属组属主"><a href="#更改属组属主" class="headerlink" title="更改属组属主"></a>更改属组属主</h4><div class="code-wrapper"><pre><code class="hljs">命令 &quot;chown&quot;：修改文件的属主和属组用法：  chown [option]... [owner][:[group]] filename...  chown [option]... --reference=RFILE filename...   owner：只修改属主   owner:group ：同时修改属主和属组   :group ：只修改属组，冒号也可用.代替   --reference=RFILE：参考指定的文件的属性来修改   -R：递归，此选项慎用！</code></pre></div><h4 id="更改文件权限"><a href="#更改文件权限" class="headerlink" title="更改文件权限"></a>更改文件权限</h4><div class="code-wrapper"><pre><code class="hljs">命令 &quot;chmod&quot;：修改文件权限  文件权限分为三种：读；写；执行    读=r=4 ； 写=w=2 ； 执行=x=1  文件用户也分为三种：    owner=属主=u ； group=属组=g ； other=其他用户=o ； 所有用户=a  r和w权限对root用户无效  属主，属组，其他用户，三者之一有x权限，root就可以执行  用法：  chmod [option]... mode[,mode]... file...  chmod [option]... cotal-mode file...  chmod [option]... --reference=RFILE file...   -R：递归修改权限  </code></pre></div><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>weekly journal</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
